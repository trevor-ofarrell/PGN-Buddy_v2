{"version":3,"file":"static/webpack/static/development/pages/login.js.f4676f17df2e59caaeba.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import React from 'react';\nimport { Paper, withStyles, Grid, TextField, Button, FormControlLabel, Checkbox } from '@material-ui/core';\nimport { Face, Fingerprint } from '@material-ui/icons'\nimport { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport fetch from 'isomorphic-unfetch'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing.unit * 2,\n    },\n    padding: {\n        padding: theme.spacing.unit\n    }\n}));\n\nexport default function LoginTab() {\n    const classes = useStyles();\n       \n    return (\n        <Paper className={classes.padding}>\n            <div className={classes.margin}>\n                <Grid container spacing={8} alignItems=\"flex-end\">\n                    <Grid item>\n                        <Face />\n                    </Grid>\n                    <Grid item md={true} sm={true} xs={true}>\n                        <TextField id=\"username\" label=\"Username\" type=\"email\" fullWidth autoFocus required />\n                    </Grid>\n                </Grid>\n                <Grid container spacing={8} alignItems=\"flex-end\">\n                    <Grid item>\n                        <Fingerprint />\n                    </Grid>\n                    <Grid item md={true} sm={true} xs={true}>\n                        <TextField id=\"username\" label=\"Password\" type=\"password\" fullWidth required />\n                    </Grid>\n                </Grid>\n                <Grid container alignItems=\"center\" justify=\"space-between\">\n                    <Grid item>\n                        <FormControlLabel control={\n                            <Checkbox\n                                color=\"primary\"\n                            />\n                        } label=\"Remember me\" />\n                    </Grid>\n                    <Grid item>\n                        <Button disableFocusRipple disableRipple style={{ textTransform: \"none\" }} variant=\"text\" color=\"primary\">Forgot password ?</Button>\n                    </Grid>\n                </Grid>\n                <Grid container justify=\"center\" style={{ marginTop: '10px' }}>\n                    <Button\n                        onClick={async () => {\n                            const movie = { title, rating };\n                            const response = await fetch(\"/\", {\n                            method: \"POST\",\n                            headers: {\n                                \"Content-Type\": \"application/json\"\n                            },\n                            body: JSON.stringify(movie)\n                            });\n\n                            if (response.ok) {\n                            console.log(\"response worked!\");\n                            onNewMovie(movie);\n                            setTitle(\"\");\n                            setRating(1);\n                            }\n                        }}\n                    >\n                    submit\n                    </Button>\n                </Grid>\n            </div>\n        </Paper>\n    );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AASA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;;;;A","sourceRoot":""}